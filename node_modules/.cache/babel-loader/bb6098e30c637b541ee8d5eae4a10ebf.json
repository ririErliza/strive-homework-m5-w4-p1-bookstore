{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erliz\\\\OneDrive\\\\Desktop\\\\Homework\\\\ReactJS\\\\strive-homework-m5-w4-p1-bookstore\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  // state = {\n  //   comments: [], // comments will go here\n  //   isLoading: false,\n  //   isError: false,\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getComment = async () => {\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k'\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json();\n        this.setState({\n          comments: comments,\n          isLoading: false,\n          isError: false\n        });\n      } else {\n        console.log('error');\n        this.setState({\n          isLoading: false,\n          isError: true\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      this.setState({\n        isLoading: false,\n        isError: true\n      });\n    }\n  };\n};\n\n_s(CommentArea, \"A0ear+qayz1LMFSnh9UhVnTmJEU=\");\n\n_c = CommentArea;\n\ncomponentDidUpdate = async prevProps => {\n  if (prevProps.asin !== this.props.asin) {\n    this.setState({\n      isLoading: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [this.state.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }, this), this.state.isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: this.props.asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: this.state.comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/erliz/OneDrive/Desktop/Homework/ReactJS/strive-homework-m5-w4-p1-bookstore/src/components/CommentArea.jsx"],"names":["useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","asin","comments","setComments","isLoading","setIsLoading","isError","setIsError","getComment","response","fetch","headers","Authorization","console","log","ok","json","setState","error","componentDidUpdate","prevProps","props","state"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;;AAEF,QAAMc,UAAU,GAAE,YAAS;AACzB,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDACET,IAFsB,EAGxB;AACEU,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX;AAFK;AADX,OAHwB,CAA1B;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,CAACM,EAAb,EAAiB;AACf,YAAIb,QAAQ,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAArB;AACA,aAAKC,QAAL,CAAc;AACZf,UAAAA,QAAQ,EAAEA,QADE;AAEZE,UAAAA,SAAS,EAAE,KAFC;AAGZE,UAAAA,OAAO,EAAE;AAHG,SAAd;AAKD,OAPD,MAOO;AACLO,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,aAAKG,QAAL,CAAc;AAAEb,UAAAA,SAAS,EAAE,KAAb;AAAoBE,UAAAA,OAAO,EAAE;AAA7B,SAAd;AACD;AACF,KAvBD,CAwBA,OAAOY,KAAP,EAAc;AACZL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,WAAKD,QAAL,CAAc;AAAEb,QAAAA,SAAS,EAAE,KAAb;AAAoBE,QAAAA,OAAO,EAAE;AAA7B,OAAd;AACD;AACF,GA7BD;AA8BC,CAxCD;;GAAMN,W;;KAAAA,W;;AA2CJmB,kBAAkB,GAAG,MAAOC,SAAP,IAAqB;AACxC,MAAIA,SAAS,CAACnB,IAAV,KAAmB,KAAKoB,KAAL,CAAWpB,IAAlC,EAAwC;AACtC,SAAKgB,QAAL,CAAc;AACZb,MAAAA,SAAS,EAAE;AADC,KAAd;AAIH;;AAEC,sBACE;AAAA,eACG,KAAKkB,KAAL,CAAWlB,SAAX,iBAAwB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAD3B,EAEG,KAAKkB,KAAL,CAAWhB,OAAX,iBAAsB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFzB,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE,KAAKe,KAAL,CAAWpB;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,cAAc,EAAE,KAAKqB,KAAL,CAAWpB;AAAxC;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CAjBC;;AAmBF,eAAeF,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea =({asin}) => {\r\n  // state = {\r\n  //   comments: [], // comments will go here\r\n  //   isLoading: false,\r\n  //   isError: false,\r\n  // }\r\n  const [comments, setComments] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\nconst getComment =async()=>{\r\n  try {\r\n    let response = await fetch(\r\n      'https://striveschool-api.herokuapp.com/api/comments/' +\r\n        asin,\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k',\r\n        },\r\n      }\r\n    )\r\n    console.log(response)\r\n    if (response.ok) {\r\n      let comments = await response.json()\r\n      this.setState({\r\n        comments: comments,\r\n        isLoading: false,\r\n        isError: false,\r\n      })\r\n    } else {\r\n      console.log('error')\r\n      this.setState({ isLoading: false, isError: true })\r\n    }\r\n  } \r\n  catch (error) {\r\n    console.log(error)\r\n    this.setState({ isLoading: false, isError: true })\r\n  }\r\n}\r\n}\r\n\r\n\r\n  componentDidUpdate = async (prevProps) => {\r\n    if (prevProps.asin !== this.props.asin) {\r\n      this.setState({\r\n        isLoading: true,\r\n      })\r\n      \r\n  }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isLoading && <Loading />}\r\n        {this.state.isError && <Error />}\r\n        <AddComment asin={this.props.asin} />\r\n        <CommentList commentsToShow={this.state.comments} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CommentArea\r\n"]},"metadata":{},"sourceType":"module"}