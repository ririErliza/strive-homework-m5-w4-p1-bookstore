{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erliz\\\\OneDrive\\\\Desktop\\\\Homework\\\\ReactJS\\\\strive-homework-m5-w4-p1-bookstore\\\\src\\\\components\\\\AddComment.jsx\";\nimport { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddComment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        comment: '',\n        rate: 1,\n        elementId: this.props.asin\n      }\n    };\n\n    this.sendComment = async e => {\n      e.preventDefault();\n\n      try {\n        let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\n          method: 'POST',\n          body: JSON.stringify(this.state.comment),\n          headers: {\n            'Content-type': 'application/json',\n            Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k'\n          }\n        });\n\n        if (response.ok) {\n          // the comment has been sent succesfully!!\n          alert('Comment was sent!');\n          this.setState({\n            comment: {\n              comment: '',\n              rate: 1,\n              elementId: this.props.asin\n            }\n          });\n        } else {\n          console.log('error');\n          alert('something went wrong');\n        }\n      } catch (error) {\n        console.log('error');\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.asin !== this.props.asin) {\n      this.setState({\n        comment: { ...this.state.comment,\n          elementId: this.props.asin\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: this.sendComment,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Comment text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Add comment here\",\n            value: this.state.comment.comment,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                comment: e.target.value\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            value: this.state.comment.rate,\n            onChange: e => this.setState({\n              comment: { ...this.state.comment,\n                rate: e.target.value\n              }\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AddComment;","map":{"version":3,"sources":["C:/Users/erliz/OneDrive/Desktop/Homework/ReactJS/strive-homework-m5-w4-p1-bookstore/src/components/AddComment.jsx"],"names":["Component","Button","Form","AddComment","state","comment","rate","elementId","props","asin","sendComment","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","setState","console","log","error","componentDidUpdate","prevProps","render","target","value"],"mappings":"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","sourcesContent":["import { Component } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nclass AddComment extends Component {\r\n  state = {\r\n    comment: {\r\n      comment: '',\r\n      rate: 1,\r\n      elementId: this.props.asin,\r\n    },\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.asin !== this.props.asin) {\r\n      this.setState({\r\n        comment: {\r\n          ...this.state.comment,\r\n          elementId: this.props.asin,\r\n        },\r\n      })\r\n    }\r\n  }\r\n\r\n  sendComment = async (e) => {\r\n    e.preventDefault()\r\n    try {\r\n      let response = await fetch(\r\n        'https://striveschool-api.herokuapp.com/api/comments',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(this.state.comment),\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization:\r\n              'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k',\r\n          },\r\n        }\r\n      )\r\n      if (response.ok) {\r\n        // the comment has been sent succesfully!!\r\n        alert('Comment was sent!')\r\n        this.setState({\r\n          comment: {\r\n            comment: '',\r\n            rate: 1,\r\n            elementId: this.props.asin,\r\n          },\r\n        })\r\n      } else {\r\n        console.log('error')\r\n        alert('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      console.log('error')\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.sendComment}>\r\n          <Form.Group>\r\n            <Form.Label>Comment text</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Add comment here'\r\n              value={this.state.comment.comment}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  comment: {\r\n                    ...this.state.comment,\r\n                    comment: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Rating</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={this.state.comment.rate}\r\n              onChange={(e) =>\r\n                this.setState({\r\n                  comment: {\r\n                    ...this.state.comment,\r\n                    rate: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddComment\r\n"]},"metadata":{},"sourceType":"module"}