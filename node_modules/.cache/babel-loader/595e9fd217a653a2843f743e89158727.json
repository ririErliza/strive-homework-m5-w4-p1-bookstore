{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erliz\\\\OneDrive\\\\Desktop\\\\Homework\\\\ReactJS\\\\strive-homework-m5-w4-p1-bookstore\\\\src\\\\components\\\\CommentArea.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport CommentList from './CommentList';\nimport AddComment from './AddComment';\nimport Loading from './Loading';\nimport Error from './Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentArea = ({\n  asin\n}) => {\n  _s();\n\n  // state = {\n  //   comments: [], // comments will go here\n  //   isLoading: false,\n  //   isError: false,\n  // }\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    getComment(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asin]);\n\n  const getComment = async () => {\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments/' + asin, {\n        headers: {\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k'\n        }\n      });\n      console.log(response);\n\n      if (response.ok) {\n        let comments = await response.json(); // this.setState({\n        //   comments: comments,\n        //   isLoading: false,\n        //   isError: false,\n        // })\n\n        setComments(comments);\n        setIsLoading(false);\n        setIsError(false);\n      } else {\n        console.log('error'); // this.setState({ isLoading: false, isError: true })\n\n        setIsLoading(false);\n        setIsError(true);\n      }\n    } catch (error) {\n      console.log(error); // this.setState({ isLoading: false, isError: true })\n\n      setIsLoading(false);\n      setIsError(true);\n    }\n  }; // componentDidUpdate = async (prevProps) => {\n  //   if (prevProps.asin !== this.props.asin) {\n  //     this.setState({\n  //       isLoading: true,\n  //     })\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this), isError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(AddComment, {\n      asin: asin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      commentsToShow: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CommentArea, \"16ZFUbzLAKNRtQTYKxvEjqhqTHQ=\");\n\n_c = CommentArea;\nexport default CommentArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentArea\");","map":{"version":3,"sources":["C:/Users/erliz/OneDrive/Desktop/Homework/ReactJS/strive-homework-m5-w4-p1-bookstore/src/components/CommentArea.jsx"],"names":["useState","useEffect","CommentList","AddComment","Loading","Error","CommentArea","asin","comments","setComments","isLoading","setIsLoading","isError","setIsError","getComment","response","fetch","headers","Authorization","console","log","ok","json","error"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC7B;AACA;AACA;AACA;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AAGAC,EAAAA,SAAS,CAAE,MAAK;AACda,IAAAA,UAAU,GADI,CAEd;AACD,GAHQ,EAGP,CAACP,IAAD,CAHO,CAAT;;AAKA,QAAMO,UAAU,GAAE,YAAS;AACzB,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,yDACET,IAFsB,EAGxB;AACEU,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EACX;AAFK;AADX,OAHwB,CAA1B;AAUAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;;AACA,UAAIA,QAAQ,CAACM,EAAb,EAAiB;AACf,YAAIb,QAAQ,GAAG,MAAMO,QAAQ,CAACO,IAAT,EAArB,CADe,CAEf;AACA;AACA;AACA;AACA;;AACAb,QAAAA,WAAW,CAACD,QAAD,CAAX;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,KAAD,CAAV;AAED,OAXD,MAWO;AACLM,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADK,CAEL;;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,KA7BD,CA8BA,OAAOU,KAAP,EAAc;AACZJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EADY,CAEZ;;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GArCD,CAhB6B,CAwD7B;AACA;AACA;AACA;AACA;AAEA;;;AAEE,sBACE;AAAA,eACGH,SAAS,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADhB,EAEGE,OAAO,iBAAI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFd,eAGE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASH,CAzED;;GAAMF,W;;KAAAA,W;AA2EN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport CommentList from './CommentList'\r\nimport AddComment from './AddComment'\r\nimport Loading from './Loading'\r\nimport Error from './Error'\r\n\r\nconst CommentArea =({asin}) => {\r\n  // state = {\r\n  //   comments: [], // comments will go here\r\n  //   isLoading: false,\r\n  //   isError: false,\r\n  // }\r\n  const [comments, setComments] = useState([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isError, setIsError] = useState(false)\r\n\r\n  \r\n  useEffect( ()=> {\r\n    getComment()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[asin])\r\n  \r\n  const getComment =async()=>{\r\n    try {\r\n      let response = await fetch(\r\n        'https://striveschool-api.herokuapp.com/api/comments/' +\r\n          asin,\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k',\r\n          },\r\n        }\r\n      )\r\n      console.log(response)\r\n      if (response.ok) {\r\n        let comments = await response.json()\r\n        // this.setState({\r\n        //   comments: comments,\r\n        //   isLoading: false,\r\n        //   isError: false,\r\n        // })\r\n        setComments(comments)\r\n        setIsLoading(false)\r\n        setIsError(false)\r\n\r\n      } else {\r\n        console.log('error')\r\n        // this.setState({ isLoading: false, isError: true })\r\n        setIsLoading(false)\r\n        setIsError(true)\r\n      }\r\n    } \r\n    catch (error) {\r\n      console.log(error)\r\n      // this.setState({ isLoading: false, isError: true })\r\n      setIsLoading(false)\r\n      setIsError(true)\r\n    }\r\n  }\r\n\r\n\r\n  // componentDidUpdate = async (prevProps) => {\r\n  //   if (prevProps.asin !== this.props.asin) {\r\n  //     this.setState({\r\n  //       isLoading: true,\r\n  //     })\r\n      \r\n  // }\r\n\r\n    return (\r\n      <div>\r\n        {isLoading && <Loading />}\r\n        {isError && <Error />}\r\n        <AddComment asin={asin} />\r\n        <CommentList commentsToShow={comments} />\r\n      </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CommentArea\r\n"]},"metadata":{},"sourceType":"module"}