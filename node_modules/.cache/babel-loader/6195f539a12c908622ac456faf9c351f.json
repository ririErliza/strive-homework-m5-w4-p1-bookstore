{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erliz\\\\OneDrive\\\\Desktop\\\\Homework\\\\ReactJS\\\\strive-homework-m5-w4-p1-bookstore\\\\src\\\\components\\\\AddComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComment = ({\n  asin\n}) => {\n  _s();\n\n  // state = {\n  // comment: {\n  //   comment: '',\n  //   rate: 1,\n  //   elementId: this.props.asin,\n  // },\n  // }\n  const [comment, setComment] = useState({\n    comment: '',\n    rate: 1,\n    elementId: asin\n  }); // componentDidUpdate(prevProps) {\n  //   if (prevProps.asin !== this.props.asin) {\n  //     this.setState({\n  //       comment: {\n  //         ...this.state.comment,\n  //         elementId: this.props.asin,\n  //       },\n  //     })\n  //   }\n  // }\n\n  useEffect(() => {\n    sendComment(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [asin]); //if the single book got clicked, asin changed, and sendComment() function will be invoked\n\n  const sendComment = async e => {\n    // e.preventDefault()\n    try {\n      let response = await fetch('https://striveschool-api.herokuapp.com/api/comments', {\n        method: 'POST',\n        body: JSON.stringify(comment),\n        headers: {\n          'Content-type': 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k'\n        }\n      });\n\n      if (response.ok) {\n        // the comment has been sent succesfully!!\n        alert('Comment was sent!'); // this.setState({\n        //   comment: {\n        //     comment: '',\n        //     rate: 1,\n        //     elementId: this.props.asin,\n        //   },\n        // })\n\n        setComment({\n          comment: '',\n          rate: 1,\n          elementId: asin\n        });\n      } else {\n        console.log('error');\n        alert('something went wrong');\n      }\n    } catch (error) {\n      console.log('error');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: sendComment,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Comment text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Add comment here\",\n          value: comment.comment,\n          onChange: e => setComment({\n            comment: { ...comment,\n              comment: e.target.value\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"select\",\n          value: comment.rate,\n          onChange: e => setComment({\n            comment: { ...comment,\n              rate: e.target.value\n            }\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddComment, \"Bb2B/JQGCCWT1yONKFKwiB4LG4U=\");\n\n_c = AddComment;\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"sources":["C:/Users/erliz/OneDrive/Desktop/Homework/ReactJS/strive-homework-m5-w4-p1-bookstore/src/components/AddComment.jsx"],"names":["useState","useEffect","Button","Form","AddComment","asin","comment","setComment","rate","elementId","sendComment","e","response","fetch","method","body","JSON","stringify","headers","Authorization","ok","alert","console","log","error","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC7B;AACE;AACA;AACA;AACA;AACA;AACF;AAEA,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;AACpCM,IAAAA,OAAO,EAAE,EAD2B;AAEpCE,IAAAA,IAAI,EAAE,CAF8B;AAGpCC,IAAAA,SAAS,EAAEJ;AAHyB,GAAD,CAArC,CAT6B,CAe7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,EAAAA,SAAS,CAAE,MAAK;AACdS,IAAAA,WAAW,GADG,CAEd;AACD,GAHQ,EAGP,CAACL,IAAD,CAHO,CAAT,CA1B6B,CA8B7B;;AAEA,QAAMK,WAAW,GAAG,MAAOC,CAAP,IAAa;AAC/B;AACA,QAAI;AACF,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CACxB,qDADwB,EAExB;AACEC,QAAAA,MAAM,EAAE,MADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf,CAFR;AAGEY,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EACX;AAHK;AAHX,OAFwB,CAA1B;;AAYA,UAAIP,QAAQ,CAACQ,EAAb,EAAiB;AACf;AACAC,QAAAA,KAAK,CAAC,mBAAD,CAAL,CAFe,CAGf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAd,QAAAA,UAAU,CAAC;AACHD,UAAAA,OAAO,EAAE,EADN;AAEHE,UAAAA,IAAI,EAAE,CAFH;AAGHC,UAAAA,SAAS,EAACJ;AAHP,SAAD,CAAV;AAKD,OAhBD,MAgBO;AACLiB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AACF,KAjCD,CAiCE,OAAOG,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACF,GAtCD;;AAyCE,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEb,WAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,kBAFd;AAGE,UAAA,KAAK,EAAEJ,OAAO,CAACA,OAHjB;AAIE,UAAA,QAAQ,EAAGK,CAAD,IACRJ,UAAU,CAAC;AACTD,YAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPA,cAAAA,OAAO,EAAEK,CAAC,CAACc,MAAF,CAASC;AAFX;AADA,WAAD;AALd;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,KAAK,EAAEpB,OAAO,CAACE,IAFjB;AAGE,UAAA,QAAQ,EAAGG,CAAD,IACRJ,UAAU,CAAC;AACTD,YAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPE,cAAAA,IAAI,EAAEG,CAAC,CAACc,MAAF,CAASC;AAFR;AADA,WAAD,CAJd;AAAA,kCAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAsCE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA8CH,CAvHD;;GAAMtB,U;;KAAAA,U;AA0HN,eAAeA,UAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nconst AddComment = ({asin}) => {\r\n  // state = {\r\n    // comment: {\r\n    //   comment: '',\r\n    //   rate: 1,\r\n    //   elementId: this.props.asin,\r\n    // },\r\n  // }\r\n\r\n  const[comment, setComment] = useState({\r\n    comment: '',\r\n    rate: 1,\r\n    elementId: asin,\r\n  })\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   if (prevProps.asin !== this.props.asin) {\r\n  //     this.setState({\r\n  //       comment: {\r\n  //         ...this.state.comment,\r\n  //         elementId: this.props.asin,\r\n  //       },\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n  useEffect( () =>{\r\n    sendComment()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[asin])\r\n  //if the single book got clicked, asin changed, and sendComment() function will be invoked\r\n\r\n  const sendComment = async (e) => {\r\n    // e.preventDefault()\r\n    try {\r\n      let response = await fetch(\r\n        'https://striveschool-api.herokuapp.com/api/comments',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(comment),\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization:\r\n              'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MjQyZmRkYWRhMTNhZjAwMTUyYzFjNjEiLCJpYXQiOjE2NTA5Njk0OTAsImV4cCI6MTY1MjE3OTA5MH0.QrRgqLmGfP5kD0uhi_9E5zlAZBtJ3dziXGlXENqvi2k',\r\n          },\r\n        }\r\n      )\r\n      if (response.ok) {\r\n        // the comment has been sent succesfully!!\r\n        alert('Comment was sent!')\r\n        // this.setState({\r\n        //   comment: {\r\n        //     comment: '',\r\n        //     rate: 1,\r\n        //     elementId: this.props.asin,\r\n        //   },\r\n        // })\r\n        \r\n        setComment({\r\n                comment: '',\r\n                rate: 1,\r\n                elementId:asin,\r\n        })\r\n      } else {\r\n        console.log('error')\r\n        alert('something went wrong')\r\n      }\r\n    } catch (error) {\r\n      console.log('error')\r\n    }\r\n  }\r\n\r\n  \r\n    return (\r\n      <div>\r\n        <Form onSubmit={sendComment}>\r\n          <Form.Group>\r\n            <Form.Label>Comment text</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Add comment here'\r\n              value={comment.comment}\r\n              onChange={(e) =>\r\n                setComment({\r\n                  comment: {\r\n                    ...comment,\r\n                    comment: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Rating</Form.Label>\r\n            <Form.Control\r\n              as='select'\r\n              value={comment.rate}\r\n              onChange={(e) =>\r\n                setComment({\r\n                  comment: {\r\n                    ...comment,\r\n                    rate: e.target.value,\r\n                  },\r\n                })\r\n              }\r\n            >\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>4</option>\r\n              <option>5</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default AddComment\r\n"]},"metadata":{},"sourceType":"module"}